{
	"info": {
		"_postman_id": "user-registration-tests",
		"name": "User Registration Tests",
		"description": "Collection for testing user registration endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register User - Invalid Email Format",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"Test\",\n    \"lastname\": \"User\",\n    \"email\": \"invalid-email\",\n    \"phone_number\": \"+233555123456\",\n    \"password\": \"StrongP@ssw0rd123\",\n    \"role\": \"property_owner\",\n    \"id_type\": \"Ghana Card\",\n    \"id_value\": \"GHA-123456789-0\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/user/register/",
					"host": ["{{base_url}}"],
					"path": ["api", "user", "register", ""]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response has error message about invalid email\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.equal('Invalid email format');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Register User - Invalid Phone Number",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"Test\",\n    \"lastname\": \"User\",\n    \"email\": \"test2@example.com\",\n    \"phone_number\": \"invalid-phone\",\n    \"password\": \"StrongP@ssw0rd123\",\n    \"role\": \"property_owner\",\n    \"id_type\": \"Ghana Card\",\n    \"id_value\": \"GHA-123456789-0\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/user/register/",
					"host": ["{{base_url}}"],
					"path": ["api", "user", "register", ""]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response has error message about invalid phone\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.equal('Invalid phone number format. Use format: +233XXXXXXXXX');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Register User - Weak Password",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"Test\",\n    \"lastname\": \"User\",\n    \"email\": \"test3@example.com\",\n    \"phone_number\": \"+233555123456\",\n    \"password\": \"weak\",\n    \"role\": \"property_owner\",\n    \"id_type\": \"Ghana Card\",\n    \"id_value\": \"GHA-123456789-0\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/user/register/",
					"host": ["{{base_url}}"],
					"path": ["api", "user", "register", ""]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response has error message about weak password\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.equal('Password must be at least 8 characters long');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Register User - Invalid ID Type",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"Test\",\n    \"lastname\": \"User\",\n    \"email\": \"test_idtype@example.com\",\n    \"phone_number\": \"+233555123456\",\n    \"password\": \"StrongP@ssw0rd123\",\n    \"role\": \"property_owner\",\n    \"id_type\": \"Drivers License\",\n    \"id_value\": \"DL123456\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/user/register/",
					"host": ["{{base_url}}"],
					"path": ["api", "user", "register", ""]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response has error message about invalid ID type\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.include('Invalid ID type. Must be one of: Ghana Card, Passport');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Register User - Missing Required Fields",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"Test\",\n    \"lastname\": \"User\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/user/register/",
					"host": ["{{base_url}}"],
					"path": ["api", "user", "register", ""]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response has error message about missing fields\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.include('is required');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Register User - Success",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Generate a unique email using timestamp",
							"const timestamp = new Date().getTime();",
							"const email = `test_${timestamp}@example.com`;",
							"pm.environment.set('last_registered_email', email);",
							"pm.variables.set('test_email', email);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has registration confirmation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('message');",
							"    pm.expect(jsonData).to.have.property('status');",
							"    pm.expect(jsonData.status).to.equal('pending_verification');",
							"    pm.expect(jsonData.is_verified).to.equal(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"Test\",\n    \"lastname\": \"User\",\n    \"email\": \"{{test_email}}\",\n    \"phone_number\": \"+233555123456\",\n    \"password\": \"StrongP@ssw0rd123\",\n    \"role\": \"property_owner\",\n    \"id_type\": \"Ghana Card\",\n    \"id_value\": \"GHA-123456789-0\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/user/register/",
					"host": ["{{base_url}}"],
					"path": ["api", "user", "register", ""]
				}
			}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
} 